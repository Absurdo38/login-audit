import java.text.SimpleDateFormat;
import java.text.DateFormat;
import io.dbmaster.tools.excelsync.ExcelSync;
import org.apache.commons.lang.StringEscapeUtils;
import com.branegy.email.EmailSender

def getNotNull(Object o) {
    if (o instanceof Date) {
        return DateFormat.getDateTimeInstance(DateFormat.SHORT, DateFormat.SHORT, Locale.US).format(o)
    }
    return o == null? "" : o.toString()
}


List<String> columns = [
    "Server",
    "Principal",
    "Principal Status",
    "Type",
    "Source",
    "Successful Logins",
    "Last Success Time",
    "Failed Logins",
    "Last Failed Time",
    "Principal Log Status",
    "Log Records Since",
    "Status" ];
    
if (p_resolve_hosts) {
   columns.add(5,"Host");
}

ExcelSync excelSync = new ExcelSync(
    columns,
    ["Server","Principal","Source"],
    "Status",
    "New",
    "AutoClosed",
    ["Ignore"] as Set,
    ["Ignore","AutoClosed","Closed"] as Set,
    new File(p_tracking_file),
    logger,
    p_backup
);


println """<table cellspacing='0' class='simple-table' border='1'>"""
println """<tr style="background-color:#EEE">"""
println "<td>Server</td>"
println "<td>Principal</td>"
println "<td>Principal Status</td>"
println "<td>Type</td>"
println "<td>Source</td>"
if (p_resolve_hosts) {
    println "<td>Host</td>"
}
println "<td>Successful Logins</td>"
println "<td>Last Success Time</td>"
println "<td>Failed Logins</td>"
println "<td>Last Failed Time</td>"
println "<td>Principal Log Status</td>"
println "<td>Log Records Since</td>"
println "</tr>"

List<Object[]> list = SqlServerLoginAudit.getLoginAuditList(dbm, logger, p_servers, p_resolve_hosts);
for (Object[] v: list){
    println "<tr>"
    println "<td>${v[0]}</td>"
    println "<td>${v[1]}</td>"
    println """<td>${v[2] == null ? "Unknown" : (v[2] ? "Disabled" : "Enabled")}</td>"""
    println "<td>${getNotNull(v[3])}</td>"
    println "<td>${StringEscapeUtils.escapeHtml(getNotNull(v[4]))}</td>"
    int index = 5;
    if (p_resolve_hosts) {
        println " <td>${StringEscapeUtils.escapeHtml(v[index++] ?: "")}</td>"
    }
    println "<td style='text-align:right'>${v[index++]}</td>"
    println "<td>${getNotNull(v[index++])}</td>"
    println "<td style='text-align:right'>${v[index++]}</td>"
    println "<td>${getNotNull(v[index++])}</td>"
    println "<td>${getNotNull(v[index++])}</td>"
    println "<td>${getNotNull(v[index++])}</td>"
    println "</tr>"
    
    excelSync.addRow(v);
}
println "</table>"

int[] score = excelSync.syncAndReturnScore();

println "During update ${score[0]} new issue(s) were found and ${score[1]} were automatically closed. Total open issues ${score[2]}<br/>"+
 "Review issues at <a href='${new File(p_tracking_file).toURI()}'>${p_tracking_file}</a>";
if (p_email != null){
    EmailSender sender = dbm.getService(EmailSender.class);
    String msg =
"""
Login audit tracking worksheet was automatically updated by DBMaster.

During update ${score[0]} new issue(s) were found and ${score[1]} were automatically closed.

Total open issues ${score[2]}

Review issues at ${p_tracking_file}.

---------------------------------------
This message was automatically generated by DBMaster plugin
""";
    
    sender.createMessage(p_email, "Login audit: worksheet updated", msg, false);
    sender.sendMessage();
}